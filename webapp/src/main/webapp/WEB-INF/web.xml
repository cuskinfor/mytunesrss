<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <description>MyTunesRSS web application</description>
    <display-name>MyTunesRSS</display-name>
    <!-- Listener for command handler registry -->
    <listener>
        <description>Command handler registry listener</description>
        <display-name>CommandHandlerRegistry</display-name>
        <listener-class>de.codewave.mytunesrss.command.MyTunesRssCommandHandlerRegistry</listener-class>
    </listener>
    <!-- Listener for session manager initialization -->
    <listener>
        <description>Session manager listener</description>
        <display-name>SessionManager</display-name>
        <listener-class>de.codewave.utils.servlet.SessionManager</listener-class>
    </listener>
    <context-param>
        <description>Session info class</description>
        <param-name>sessionInfoClass</param-name>
        <param-value>de.codewave.mytunesrss.server.MyTunesRssSessionInfo</param-value>
    </context-param>
    <!-- Listener for remote API session manager initialization -->
    <listener>
        <description>Remote API session manager</description>
        <display-name>RemoteApiSessionManager</display-name>
        <listener-class>de.codewave.mytunesrss.remote.RemoteApiSessionManager</listener-class>
    </listener>
    <!-- Filter for setting the request encoding to UTF-8 if none has been specified -->
    <filter>
        <description>Filter for setting the request encoding.</description>
        <display-name>EncodingFilter</display-name>
        <filter-name>EncodingFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.servlet.EncodingFilter</filter-class>
        <init-param>
            <description>Character encoding</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <!-- Filter for adjusting the request scheme if a proxy scheme has been specified -->
    <filter>
        <description>Filter for adjusting the request scheme.</description>
        <display-name>RequestSchemeFilter</display-name>
        <filter-name>RequestSchemeFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.servlet.RequestSchemeFilter</filter-class>
    </filter>
    <!-- Filter for decrypting the path information -->
    <filter>
        <description>Filter for decrypting the path info.</description>
        <display-name>PathInfoDecryptionFilter</display-name>
        <filter-name>PathInfoDecryptionFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.servlet.PathInfoDecryptionFilter</filter-class>
    </filter>
    <!-- Filter for adding the path information key/value pairs to the request parameters -->
    <filter>
        <description>Filter for adding path info key/value pairs to the request parameters.</description>
        <display-name>PathInfoRequestParameterFilter</display-name>
        <filter-name>PathInfoRequestParameterFilter</filter-name>
        <filter-class>de.codewave.utils.servlet.PathInfoRequestParameterFilter</filter-class>
    </filter>
    <!-- Filter for trimming all request parameter values -->
    <filter>
        <description>Filter for trimming all parameter strings.</description>
        <display-name>ServletRequestParameterTrimmer</display-name>
        <filter-name>ServletRequestParameterTrimmer</filter-name>
        <filter-class>de.codewave.utils.servlet.ServletRequestParameterTrimmer</filter-class>
    </filter>
    <!-- Session manager filter -->
    <filter>
        <filter-name>SessionManagerFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.servlet.MyTunesRssSessionManager</filter-class>
    </filter>
    <!-- Filter for applying a transaction to each request -->
    <filter>
        <filter-name>TransactionFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.servlet.TransactionFilter</filter-class>
    </filter>
    <!-- Filter for handling the JSONP parameter -->
    <filter>
        <filter-name>JsonpFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.remote.JsonpFilter</filter-class>
    </filter>
    <!-- Filter which converts a GET request with the BODY parameter into a POST request -->
    <filter>
        <filter-name>PostViaGetFilter</filter-name>
        <filter-class>de.codewave.mytunesrss.remote.PostViaGetFilter</filter-class>
    </filter>
    <!-- Filter for compressing the response -->
    <filter>
        <filter-name>CompressingFilter</filter-name>
        <filter-class>de.codewave.utils.servlet.GzipFilter</filter-class>
        <!--filter-class>com.planetj.servlet.filter.compression.CompressingFilter</filter-class-->
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- Filter mappings -->
    <filter-mapping>
        <filter-name>EncodingFilter</filter-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>RequestSchemeFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>PathInfoDecryptionFilter</filter-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>PathInfoRequestParameterFilter</filter-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ServletRequestParameterTrimmer</filter-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SessionManagerFilter</filter-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CompressingFilter</filter-name>
        <url-pattern>/jsonrpc/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CompressingFilter</filter-name>
        <url-pattern>/xmlrpc/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>JsonpFilter</filter-name>
        <url-pattern>/jsonrpc/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>PostViaGetFilter</filter-name>
        <url-pattern>/jsonrpc/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>TransactionFilter</filter-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>TransactionFilter</filter-name>
        <url-pattern>/jsonrpc/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>TransactionFilter</filter-name>
        <url-pattern>/xmlrpc/*</url-pattern>
    </filter-mapping>
    <servlet>
        <description>Command dispatcher servlet</description>
        <display-name>CommandServlet</display-name>
        <servlet-name>CommandServlet</servlet-name>
        <servlet-class>de.codewave.utils.servlet.CommandServlet</servlet-class>
    </servlet>
    <servlet>
        <description>Stylesheet retrieval servlet</description>
        <display-name>StylesServlet</display-name>
        <servlet-name>StylesServlet</servlet-name>
        <servlet-class>de.codewave.mytunesrss.servlet.StylesServlet</servlet-class>
    </servlet>
    <servlet>
        <description>Image retrieval servlet</description>
        <display-name>ImageServlet</display-name>
        <servlet-name>ImageServlet</servlet-name>
        <servlet-class>de.codewave.mytunesrss.servlet.ImageServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>XmlRpcServlet</servlet-name>
        <servlet-class>de.codewave.mytunesrss.remote.MyTunesRssXmlRpcServlet</servlet-class>
        <init-param>
            <param-name>enabledForExceptions</param-name>
            <param-value>false</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>JsonRpcServlet</servlet-name>
        <servlet-class>de.codewave.mytunesrss.remote.MyTunesRssJsonRpcServlet</servlet-class>
        <init-param>
            <param-name>gzip_threshold</param-name>
            <param-value>-1</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>CommandServlet</servlet-name>
        <url-pattern>/mytunesrss/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>StylesServlet</servlet-name>
        <url-pattern>/styles/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ImageServlet</servlet-name>
        <url-pattern>/images/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>XmlRpcServlet</servlet-name>
        <url-pattern>/xmlrpc/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>JsonRpcServlet</servlet-name>
        <url-pattern>/jsonrpc/*</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    <jsp-config>
        <taglib>
            <taglib-uri>http://www.codewave.de/mytunesrss/jsp/functions</taglib-uri>
            <taglib-location>/WEB-INF/mytunes-functions.tld</taglib-location>
        </taglib>
        <taglib>
            <taglib-uri>http://www.codewave.de/mytunesrss/jsp/tags</taglib-uri>
            <taglib-location>/WEB-INF/mytunes-tags.tld</taglib-location>
        </taglib>
    </jsp-config>
</web-app>
